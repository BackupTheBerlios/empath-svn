[_] % SimpleInterface
	[_] Any object can act as an interface
	[_] Objects that contain function-like objects must define an interface
	description object that redefines as a real function
	[_] Interface description objects are simple new-style classes that
	redefine some or all of an interface in terms of classes, functions and/or
	methods, properties, and simple attributes
	[_] When checking against an interface, if an object's member is a method
	descriptor and not a {method,class,function} when the interface expects a
	function/method/class, will only check the name associated with the
	member.
	----------------------------------------
	Module Details
	----------------------------------------
	[_] % Module-level Attributes
		[_] raCall
		[_] raInstance
		[_] ioIgnoreRegistry
		[_] ioDoNotRegisterResult
		[_] ioOnlyDef
		[_] ioCheckNamesOnly
		[_] ioIncludeMagicMembers
		[_] ictStrictCheck
		[_] ictSemiRelaxedCheck
		[_] ictRelaxedCheck
		[_] rioDoNotCallImplements
		[_] _InterfaceRegistry
			Type
				list
			Element
				Type
					dict
				Format
					{'interface':<obj>,
					'def': <obj>, 
					'include': tuple,
					'exclude': tuple,
					'onlydef': boolean,
					'checklevel': int,
					'parents': list,
					'instances': list, 
					'obj': list,
					'adapters': list}
				Adapters Element Format
					{'adapter': <obj>,
					'instances': list,
					'obj': list}
				
	[_] % Module Functions
		[_] implements
			Description
				Compares an object with an interface object; return True if the
				object implements the interface, False otherwise.
			Required Arguments
				obj
					The object to check.
				interface
					The object acting as an interface.
			Allowed Anonymous Argument Types
				ioCheckNamesOnly
					If set, will only check existence of a name among members
					of an object matching those of the interface.
				ioIgnoreRegistry
					If set, will never use information stored in the registry
					to do checks.
				ioDoNotRegisterResult
					If set, will not register a successful check.
				ioOnlyDef
					If set, will strictly use the interface definition as the
					interface, disregarding the specified interface object.
				ioIncludeMagicMembers
					If set, will include magic members in checks.
			Allowed Anonymous Keyword Arguments
				idef
					An object acting as an interface definition.
				checklevel
					One of the following options:
						ictStrict
							Every member in the object must match every member
							in the interface. The presence of
							ioIncludeMagicMembers option will include magic
							members in the check. Will also check member types
							and function arguments for function objects if
							ioCheckNamesOnly is not set.
						ictSemiRelaxed
							Similar to ictStrict, but will only care about
							missing members or members with differing types;
							extra members not specified in the interface are
							allowed. If ioCheckCNamesOnly option is set, this
							behaves exactly like ictRelaxed. This is the
							default.
						ictRelaxed
							Like ictSemiRelaxed, but doesn't care nor check
							the types of object members. The ioCheckNamesOnly
							option does not affect this.
				options
					A tuple containing any combination of the allowed
					anonymous argument types.
		[_] canadapt 
			Description
				Determines if an object can adapt to an interface; returns
				True if the object directly implements an interface or a
				registered adapter exists for this object; returns False
				otherwise. All options passed to this function are passed to
				the 'implements()' function when it is called by this
				function.
			Required Arguments
				obj
					The object to check.
				interface
					The object acting as an interface.
			Allowed Anonymous Arguments
				ioCheckNamesOnly
					If set, will only check existence of a name among members
					of an object matching those of the interface.
				ioIncludeMagicMembers
					If set, will include magic members in checks.
			Allowed Anonymous Keyword Arguments
				checklevel
					One of the following options:
						ictStrict
							Every member in the object must match every member
							in the interface. The presence of
							ioIncludeMagicMembers option will include magic
							members in the check. Will also check member types
							and function arguments for function objects if
							ioCheckNamesOnly is not set.
						ictSemiRelaxed
							Similar to ictStrict, but will only care about
							missing members or members with differing types;
							extra members not specified in the interface are
							allowed. If ioCheckCNamesOnly option is set, this
							behaves exactly like ictRelaxed. This is the
							default.
						ictRelaxed
							Like ictSemiRelaxed, but doesn't care nor check
							the types of object members. The ioCheckNamesOnly
							option does not affect this.
				options
					A tuple containing any combination of the allowed
					anonymous argument types.
		[_] adapt 
			Description
				module function calls a registered adapter passing the
				specified object in. Returns an object that implements the
				specified interface or raises an exception.
			Required Arguments
				obj
					The object to adapt.
				interface
					The object acting as an interface.
			Allowed Anonymous Arguments
				ioCheckNamesOnly
					If set, will only check existence of a name among members
					of an object matching those of the interface.
				ioIncludeMagicMembers
					If set, will include magic members in checks.
			Allowed Anonymous Keyword Arguments
				checklevel
					One of the following options:
						ictStrict
							Every member in the object must match every member
							in the interface. The presence of
							ioIncludeMagicMembers option will include magic
							members in the check. Will also check member types
							and function arguments for function objects if
							ioCheckNamesOnly is not set.
						ictSemiRelaxed
							Similar to ictStrict, but will only care about
							missing members or members with differing types;
							extra members not specified in the interface are
							allowed. If ioCheckCNamesOnly option is set, this
							behaves exactly like ictRelaxed. This is the
							default.
						ictRelaxed
							Like ictSemiRelaxed, but doesn't care nor check
							the types of object members. The ioCheckNamesOnly
							option does not affect this.
				options
					A tuple containing any combination of the allowed
					anonymous argument types.
		[_] RegisterInterface 
			Description
				Registers an interface for one or more objects.
			Required Arguments
				interface
					The object to register as an interface
				instances
					A sequence containing new-style classes whose instances
					implement 'interface'. The sequence 'instances + obj' must
					contain at least one element if 'parents' is 'None'.
				obj
					A sequence containing objects to associate with
					'interface'.  Must contain at least one element. The
					sequence 'instances + obj' must contain at least one
					element if 'parents' is 'None'.
			Allowed Anonymous Argument Types
				rioDoNotCallImplements
					If not set, will call the 'implements()' function
				ioOnlyDef
					If set, will only use the interface definition object when
					determining if an object implements an interface.
				ioCheckNamesOnly
					If set, will only check existence of a name among members
					of an object matching those of the interface.
				ioIncludeMagicMembers
					If set, will include magic members in checks.
			Allowed Anonymous Keyword Arguments
				definition
					* An interface definition.
					* Defaults to 'None'.
				adapters
					A sequence containing either a callable object or a
					2-tuple of (callable object, adapter_type) to use as an
					adapter factory for the elements of the 'instances + obj'
					sequence.
				parents
					A sequence containing registered interfaces to use as the
					parents of this interface.
				include
					A sequence of names to process. 'exclude' must be 'None'.
				exclude
					A sequence of names to ignore. 'include' must be 'None'.
				checklevel
					One of the following options:
						ictStrict
							Every member in the object must match every member
							in the interface. The presence of
							ioIncludeMagicMembers option will include magic
							members in the check. Will also check member types
							and function arguments for function objects if
							ioCheckNamesOnly is not set.
						ictSemiRelaxed
							Similar to ictStrict, but will only care about
							missing members or members with differing types;
							extra members not specified in the interface are
							allowed. If ioCheckCNamesOnly option is set, this
							behaves exactly like ictRelaxed. This is the
							default.
						ictRelaxed
							Like ictSemiRelaxed, but doesn't care nor check
							the types of object members. The ioCheckNamesOnly
							option does not affect this.
				options
					A tuple containing any combination of the allowed
					anonymous argument types.
		[_] RegisterAdapter 
			Description
				Registers a callable object as an adapter factory for a
				registered interface.
			Required Arguments
				adapter
					The callable object to use as the adapter factory
				interfaces
					A sequence containing registered interfaces. Must contain
					at least one element.
				instances
					A sequence containing new-style classes whose instances
					are accepted by the adapter. If both 'instances' and 'obj'
					is 'None', or the sequence 'instances + obj' is empty,
					then the adapter accepts all objects directly. 
				obj
					A sequence containing objects that are directly accepted
					by the adapter. If both 'instances' and 'obj' is 'None',
					or the sequence 'instances + obj' is empty, then the
					adapter accepts all objects directly.
			Allowed Anonymous Keyword Arguments
				adapter_type
					* Either 'raCall' or 'raInstance'
						raCall
							The adapter will be treated as a direct callable
							object.
						raInstance
							The adapter's instance will implement the
							interface.
					* Defaults to 'raCall'
